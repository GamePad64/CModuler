# - find @CMODULER_MODULE_LONG_NAME@
# @CMODULER_MODULE_NAME_UPPERCASE@_INCLUDE_DIR - Where to find @CMODULER_MODULE_LONG_NAME@ header files (directory)
# @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARIES - @CMODULER_MODULE_LONG_NAME@ libraries
# @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE - Where the release library is
# @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG - Where the debug library is
# @CMODULER_MODULE_NAME_UPPERCASE@_FOUND - Set to TRUE if we found everything (library, includes and executable)

# Copyright (c) @CMODULER_COPYRIGHT_YEARS@ @CMODULER_AUTHOR_NAME@, <@CMODULER_AUTHOR_EMAIL@>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler

IF( @CMODULER_MODULE_NAME_UPPERCASE@_INCLUDE_DIR AND @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE AND @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG )
    SET( @CMODULER_MODULE_NAME_UPPERCASE@_FIND_QUIETLY TRUE )
ENDIF( @CMODULER_MODULE_NAME_UPPERCASE@_INCLUDE_DIR AND @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE AND @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG )

FIND_PATH( @CMODULER_MODULE_NAME_UPPERCASE@_INCLUDE_DIR @CMODULER_HEADER_FILE@ @CMODULER_HEADER_FILES_PATH_SUFFIXES_AND_KEYWORD@ )

FIND_LIBRARY(@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE NAMES @CMODULER_LIBRARY_NAME_RELEASE@ @CMODULER_LIBRARY_RELEASE_PATH_SUFFIXES_AND_KEYWORD@ )

FIND_LIBRARY(@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG NAMES @CMODULER_LIBRARY_NAME_DEBUG@ @CMODULER_LIBRARY_DEBUG_PATH_SUFFIXES_AND_KEYWORD@ HINTS /usr/lib/debug/usr/lib/ )

IF( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE OR @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG AND @CMODULER_MODULE_NAME_UPPERCASE@_INCLUDE_DIR )
    SET( @CMODULER_MODULE_NAME_UPPERCASE@_FOUND TRUE )
ENDIF( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE OR @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG AND @CMODULER_MODULE_NAME_UPPERCASE@_INCLUDE_DIR )

IF( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG AND @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE )
    IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
        # if the generator supports configuration types then set
        # optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
        SET( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARIES optimized ${@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE} debug ${@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG} )
    ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
        # if there are no configuration types and CMAKE_BUILD_TYPE has no value
        # then just use the release libraries
        SET( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARIES ${@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE} )
    ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE )
    SET( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARIES ${@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE} )
ELSE( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG AND @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE )
    SET( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARIES ${@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG} )
ENDIF( @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_DEBUG AND @CMODULER_MODULE_NAME_UPPERCASE@_LIBRARY_RELEASE )

IF( @CMODULER_MODULE_NAME_UPPERCASE@_FOUND )
    IF( NOT @CMODULER_MODULE_NAME_UPPERCASE@_FIND_QUIETLY )
        MESSAGE( STATUS "Found @CMODULER_MODULE_NAME@ header file in ${@CMODULER_MODULE_NAME_UPPERCASE@_INCLUDE_DIR}" )
        MESSAGE( STATUS "Found @CMODULER_MODULE_NAME@ libraries: ${@CMODULER_MODULE_NAME_UPPERCASE@_LIBRARIES}" )
    ENDIF( NOT @CMODULER_MODULE_NAME_UPPERCASE@_FIND_QUIETLY )
ELSE( @CMODULER_MODULE_NAME_UPPERCASE@_FOUND )
    IF( @CMODULER_MODULE_NAME_UPPERCASE@_FIND_REQUIRED )
        MESSAGE( FATAL_ERROR "Could not find @CMODULER_MODULE_NAME@" )
    ELSE( @CMODULER_MODULE_NAME_UPPERCASE@_FIND_REQUIRED )
        MESSAGE( STATUS "Optional package @CMODULER_MODULE_NAME@ was not found" )
    ENDIF( @CMODULER_MODULE_NAME_UPPERCASE@_FIND_REQUIRED )
ENDIF( @CMODULER_MODULE_NAME_UPPERCASE@_FOUND )
